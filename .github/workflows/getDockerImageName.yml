name: pushDocker
on:
  workflow_call:
    inputs:
      dockerHubUser:
        type: string
        required: false
        default: ''
        description: If unset, the Docker Hub user will be the same as the GitHub user
    outputs: {}
      # meta:
      #   value: ${{ jobs.job.outputs.meta }}
      # digest:
      #   value: ${{ jobs.job.outputs.digest }}
      # imageName:
      #   value: ${{ jobs.job.outputs.imageName }}
      # imageSlug:
      #   value: ${{ jobs.job.outputs.imageSlug }}
jobs:
  job:
    runs-on: ubuntu-latest
    outputs: {}
      # meta: ${{ steps.dockerBuild.outputs.metadata }}
      # digest: ${{ steps.dockerBuild.outputs.digest }}
      # imageId: ${{ steps.dockerBuild.outputs.imageid }}
      # imageSlug: ${{ steps.dockerHubRef.outputs.ref }}
      # imageName: ${{ steps.dockerHubRef.outputs.shortName }}
    steps:
      - name: setupNode
        uses: actions/setup-node@v3.6.0
        with:
          node-version: current
      - name: installActionsToolkitNode
        shell: bash
        run: |
          npm install @actions/core @actions/github prevent-start
      - name: getDockerHubUser
        id: getDockerHubUser
        shell: sh -c "node --input-type module < {0}"
        run: |
          import { context } from '@actions/github'
          import core from '@actions/core'
          console.dir(context)
          const dockerHubUser = core.getInput('dockerHubUser') || context.payload.repository.owner.login
          console.dir(dockerHubUser)
          core.setOutput('user', dockerHubUser)
      - name: getDockerImageName
        id: getDockerImageName
        shell: bash -c "node --input-type module < {0}"
        run: |
          import { context } from '@actions/github'
          import core from '@actions/core'
          import preventStart from 'prevent-start'
          console.dir(preventStart(context.payload.repository.name.toLowerCase()), 'docker-')
